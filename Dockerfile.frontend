# ============================================
# Estágio de Build (Node.js)
# ============================================
FROM node:16-alpine AS build

WORKDIR /app

# 1. Copia apenas os arquivos necessários para instalação de dependências
COPY frontend/package.json frontend/package-lock.json ./

# 2. Instala dependências com cache otimizado
RUN npm ci --silent

# 3. Copia o restante dos arquivos do frontend
COPY frontend .

# 4. Build de produção com Babel
RUN npm run build

# ============================================
# Estágio de Execução (Nginx)
# ============================================
FROM nginx:1.23-alpine

# 1. Remove a configuração default do Nginx
RUN rm /etc/nginx/conf.d/default.conf

# 2. Copia os arquivos buildados
COPY --from=build /app/dist /usr/share/nginx/html

# 3. Copia a configuração customizada do Nginx
COPY frontend/nginx.conf /etc/nginx/conf.d/

# 4. Configurações de segurança
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# 5. Porta e comando de execução
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]