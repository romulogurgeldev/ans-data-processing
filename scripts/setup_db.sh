#!/bin/bash

# Configura√ß√£o do banco de dados
DB_NAME="ans_db"
DB_USER="ans_user"
DB_PASS="password"
DB_HOST="localhost"
SQL_SCRIPT="database/create_tables.sql"

echo "üìå Iniciando configura√ß√£o do banco de dados ANS..."

# Verifica se o PostgreSQL est√° instalado
if ! command -v psql &> /dev/null; then
    echo "‚ùå PostgreSQL n√£o est√° instalado. Instale primeiro."
    exit 1
fi

# Verifica se o banco de dados j√° existe
DB_EXISTS=$(sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'")
if [ "$DB_EXISTS" == "1" ]; then
    echo "‚úÖ Banco de dados $DB_NAME j√° existe. Pulando cria√ß√£o..."
else
    echo "üìå Criando banco de dados $DB_NAME..."
    sudo -u postgres psql <<EOF
    CREATE DATABASE $DB_NAME;
    CREATE USER $DB_USER WITH PASSWORD '$DB_PASS';
    GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
EOF
    echo "‚úÖ Banco de dados e usu√°rio configurados com sucesso!"
fi

# Verifica se o script SQL existe antes de executar
if [ ! -f "$SQL_SCRIPT" ]; then
    echo "‚ùå O arquivo $SQL_SCRIPT n√£o foi encontrado! Verifique o caminho."
    exit 1
fi

# Define senha tempor√°ria apenas para execu√ß√£o
export PGPASSWORD="$DB_PASS"

# Executa scripts SQL
echo "üì• Executando script de cria√ß√£o de tabelas..."
psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -f "$SQL_SCRIPT"

if [ $? -eq 0 ]; then
    echo "‚úÖ Banco de dados configurado com sucesso!"
else
    echo "‚ùå Erro ao executar o script SQL."
    exit 1
fi

# Limpa a vari√°vel de ambiente por seguran√ßa
unset PGPASSWORD
